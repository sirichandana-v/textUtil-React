{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","console","log","target","value","rows","backgroundColor","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83637b2c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode ===`light` ? `dark`: `light`}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired,\r\n}\r\nNavbar.defaultProps={\r\n    title:\"set title\",\r\n    aboutText:\"About text here\"\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText]=useState('');\r\n    const handleUpClick=()=>{  \r\n        setText(text.toUpperCase());\r\n        props.showAlert('Converted to UpperCase', 'success')\r\n    }\r\n    const handleLoClick=()=>{ \r\n        setText(text.toLowerCase())\r\n        props.showAlert('Converted to LowerCase', 'success')\r\n    }\r\n    const handleClear=()=>{\r\n        setText('');\r\n        props.showAlert('Text cleared', 'success')\r\n    }\r\n    const handleCopy=()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert('Copied to Clipboard', 'success')\r\n    }\r\n    const handleSpace=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert('Extra spaces removed', 'success')\r\n    }\r\n\r\n    \r\n    const handleOnChange=(event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Container\" style={{color:props.mode ===`dark` ? `white`: `black`}}>\r\n        <div>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                \r\n                <textarea className=\"form-control\" onChange={handleOnChange} id=\"myBox\" value={text} rows=\"7\" style={{backgroundColor:props.mode ==='dark' ? 'dark': 'light', color:props.mode==='dark'? 'grey':'black'}}></textarea>\r\n            </div>\r\n                <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Upper case</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to lower case</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleSpace}>Remove Extra space</button>\r\n\r\n        </div>\r\n\r\n        <div className=\"container my-2\">\r\n            <h2>Text summary</h2>\r\n            <p>{text.split(' ').length} words and {text.length} characters</p>\r\n            <p>{0.008* text.split(' ').length} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length===0? 'Enter something to preview': text}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize=(word)=>{\r\n\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n\r\n    \r\n    return (\r\n        props.alert && <div>\r\n         <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode]=useState('light');\n  const [alert, setAlert]=useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(\n      ()=>setAlert(null),1500\n    )\n\n  }\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='rgb(7 42 71)';\n      showAlert('Dark Mode has been enabled','success')\n\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert('Light Mode has been enabled','success')  \n    }\n  }\n  return (\n    <>\n  {/* <Router> */}\n  <Navbar title=\"TextUtil\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <TextForm showAlert={showAlert} heading=\"Enter Text to analyze\" mode={mode}/>\n        {/* <Routes>\n              <Route exact path=\"/about\" element={<About />}>\n                \n              </Route>\n  \n              <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter Text to analyze\" mode={mode}/>}>\n                \n              </Route>\n        </Routes> */}\n    </div>\n  {/* </Router> */}\n    \n\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}